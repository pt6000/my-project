# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  build-java:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: pt6000/demo-app
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
         
 #   - name: Tar files
 #     run: tar -cvf my_files.tar ${{ github.workspace }}

  #  - name: 'Upload Artifact'
  #    uses: actions/upload-artifact@v2
 #     with:
 #       name: my-artifact
 #       path: my_files.tar  
    - run: docker trust key generate lwl11
    #  vars_prompt:
    - name: first_passphrase
         defaults:{{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
   #  - name: second_passphrase
   #    prompt: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     unsafe: yes
  #     private: yes
            
    - name: Checkout project
      uses: actions/checkout@v2
      
    - name: Build image
      run: |
        docker build -t test_image:latest -<<EOF
        FROM busybox
        RUN touch abc.txt
        EOF

    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: pt6000/demo-app


    - name: Checkout project
      uses: actions/checkout@v2

    - name: Download image
      uses: ishworkh/docker-image-artifact-download@v1
      with:
        image: pt6000/demo-app
  #      downloads_url: pt6000/demo-app

  #  - name: Tar files
  #    run: tar -cvf image.tar ${{ github.workspace }}

  #  - name: 'Upload Artifact'
  #    uses: actions/upload-artifact@v2
  #    with:
  #      name: '*'
  #      path: https://github.com/pt6000/my-project/suites/*/artifacts/*
  
      
        
    - name: Generate certificates for next step
      uses: kofemann/action-create-certificate@v0.0.4
      with:
          hostcert: 'hostcert.pem'
          hostkey:  'hostkey.pem'
          cachain:  'ca-chain.pem'

    - name: Use generated certificates
      run: |
            openssl x509 -in hostcert.pem -noout -text
